name: Monitor Qase Test Run

on:
  workflow_dispatch:     # Bisa dijalankan manual

jobs:
  check-qase-status:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Call Qase API
        id: check-qase
        env:
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
          QASE_RUN_ID: ${{ secrets.QASE_RUN_ID }}
        run: |
          echo "ðŸ“¡ Checking Qase test run status..."

          RESPONSE=$(curl -s -X GET "https://api.qase.io/v2/${QASE_PROJECT_CODE}/run/${QASE_RUN_ID}" \
            -H "Content-Type: application/json" \
            -H "Token: ${QASE_API_TOKEN}")

          echo "Raw Response: $RESPONSE"

          STATUS=$(echo "$RESPONSE" | jq -r '.result.status')
          FAILED=$(echo "$RESPONSE" | jq -r '.result.stats.failed')

          echo "Qase Test Run Status: $STATUS"
          echo "Failed tests: $FAILED"

          echo "::set-output name=status::$STATUS"
          echo "::set-output name=failed::$FAILED"

      - name: Create GitHub Issue if Needed
        if: steps.check-qase.outputs.status != 'completed' || steps.check-qase.outputs.failed != '0'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          TITLE="ðŸš¨ Qase Test Run ${{ secrets.QASE_RUN_ID }} Issue"
          BODY="Status: \`${{ steps.check-qase.outputs.status }}\`\nFailed Tests: \`${{ steps.check-qase.outputs.failed }}\`\n\nSilakan cek di Qase dashboard."

          curl -s -X POST https://api.github.com/repos/${{ github.repository }}/issues \
            -H "Authorization: token $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg title "$TITLE" --arg body "$BODY" '{title: $title, body: $body}')"
