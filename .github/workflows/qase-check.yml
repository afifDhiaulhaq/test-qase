name: Sync Qase Defects to GitHub Issues

on:
  workflow_dispatch:

permissions:
  issues: write   # âœ… supaya bisa bikin Issue

jobs:
  sync-defects:
    runs-on: ubuntu-latest
    steps:
      - name: Check Qase Defects
        id: check-defects
        env:
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
        run: |
          RESPONSE=$(curl -s -X GET "https://api.qase.io/v1/defect/${QASE_PROJECT_CODE}" \
            -H "Content-Type: application/json" \
            -H "Token: ${QASE_API_TOKEN}")
      
          echo "Raw Response: $RESPONSE"
      
          # Ambil defect yang statusnya "open"
          OPEN_DEFECTS=$(echo "$RESPONSE" | jq '[.result.entities[] | select(.status == "open")]')
          COUNT=$(echo "$OPEN_DEFECTS" | jq 'length')
      
          echo "open_count=$COUNT" >> $GITHUB_OUTPUT
      
          # simpan JSON sebagai multiline output
          echo "defects<<EOF" >> $GITHUB_OUTPUT
          echo "$OPEN_DEFECTS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: Create GitHub Issue for New Defects
        if: steps.check-defects.outputs.open_count != '0'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
        run: |
          for row in $(echo '${{ steps.check-defects.outputs.defects }}' | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }
      
            TITLE="[Qase Defect] $(_jq '.title')"

            # ambil attachment URLs jika ada
            ATTACHMENTS=$(echo ${row} | base64 --decode | jq -r '.attachments[]?.file_url' 2>/dev/null)

            BODY="**Defect ID:** $(_jq '.id')\n**Description:** $(_jq '.actual_result')\n**Severity:** $(_jq '.severity')\nðŸ”— [Lihat di Qase](https://app.qase.io/defect/${QASE_PROJECT_CODE}/defect/$(_jq '.id'))"

            if [ -n "$ATTACHMENTS" ]; then
              BODY="$BODY\n\nðŸ“Ž **Attachments:**"
              for link in $ATTACHMENTS; do
                # kalau gambar (png/jpg/gif), pakai markdown image
                if [[ "$link" =~ \.(png|jpg|jpeg|gif)$ ]]; then
                  BODY="$BODY\n![]($link)"
                else
                  BODY="$BODY\n[$link]($link)"
                fi
              done
            fi
      
            curl -s -X POST https://api.github.com/repos/${{ github.repository }}/issues \
              -H "Authorization: token $GH_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$(jq -n --arg title "$TITLE" --arg body "$BODY" '{title: $title, body: $body}')"
          done
