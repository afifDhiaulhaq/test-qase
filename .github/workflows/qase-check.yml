name: Monitor Qase Test Run

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  check-qase-status:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get Qase Run Summary
        id: check-qase
        env:
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
          QASE_RUN_ID: ${{ secrets.QASE_RUN_ID }}
        run: |
          echo "📡 Checking Qase test run status..."

          RUN_RESPONSE=$(curl -s -X GET "https://api.qase.io/v1/run/${QASE_PROJECT_CODE}/${QASE_RUN_ID}" \
            -H "Content-Type: application/json" \
            -H "Token: ${QASE_API_TOKEN}")
          
          echo "Run Summary: $RUN_RESPONSE"

          STATUS_CODE=$(echo "$RUN_RESPONSE" | jq -r '.result.status')
          FAILED=$(echo "$RUN_RESPONSE" | jq -r '.result.stats.failed')

          case "$STATUS_CODE" in
            3) STATUS="completed" ;;
            1) STATUS="active" ;;
            *) STATUS="other" ;;
          esac

          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT

      - name: Get Failed Test Cases
        id: failed-cases
        if: steps.check-qase.outputs.failed != '0'
        env:
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
          QASE_RUN_ID: ${{ secrets.QASE_RUN_ID }}
        run: |
          echo "🔍 Fetching failed test case details..."
          RESPONSE=$(curl -s -X GET "https://api.qase.io/v1/result/${QASE_PROJECT_CODE}/${QASE_RUN_ID}" \
            -H "Content-Type: application/json" \
            -H "Token: ${QASE_API_TOKEN}")
          
          echo "Raw Result Response: $RESPONSE"

          FAILED_CASES=$(echo "$RESPONSE" | jq -r '.result[] | select(.status=="failed") | "- " + .case.title')
          
          echo "$FAILED_CASES" > failed_cases.txt
          echo "cases<<EOF" >> $GITHUB_OUTPUT
          cat failed_cases.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Issue if Needed
        if: steps.check-qase.outputs.status != 'completed' || steps.check-qase.outputs.failed != '0'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          TITLE="🚨 Qase Test Run ${{ secrets.QASE_RUN_ID }} Issue"
          
           BODY=$(cat <<EOF
            Status: \`${{ steps.check-qase.outputs.status }}\`
            Failed Tests: \`${{ steps.check-qase.outputs.failed }}\`
            
            Silakan cek detail lebih lanjut di Qase dashboard.
            EOF
                )
            
                curl -s -X POST https://api.github.com/repos/${{ github.repository }}/issues \
                  -H "Authorization: token $GH_TOKEN" \
                  -H "Content-Type: application/json" \
                  -d "$(jq -n --arg title "$TITLE" --arg body "$BODY" '{title: $title, body: $body}')"
